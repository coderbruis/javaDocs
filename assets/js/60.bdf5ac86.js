(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{454:function(t,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-字符串（strings）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-字符串（strings）"}},[t._v("#")]),t._v(" 1. 字符串（strings）")]),t._v(" "),a("h3",{attrs:{id:"_1-1-基本介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基本介绍"}},[t._v("#")]),t._v(" 1.1 基本介绍")]),t._v(" "),a("h3",{attrs:{id:"_1-2-基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-基本操作"}},[t._v("#")]),t._v(" 1.2 基本操作")]),t._v(" "),a("h3",{attrs:{id:"_1-3-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-应用场景"}},[t._v("#")]),t._v(" 1.3 应用场景")]),t._v(" "),a("h3",{attrs:{id:"_1-4-底层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-底层原理"}},[t._v("#")]),t._v(" 1.4 底层原理")]),t._v(" "),a("p",[t._v("Redis的字符串是一个由字节组成的序列，跟java里面的ArrayList有 点类似,采用预分配冗余空间的方式来减少内存的频繁分配，内部为当前字符串实际分配的空间capacity -般要高于实际字符串长度len。当字符串长度小于1M时，扩容都是加倍现有的空间，如果超过1M,扩容时一-次只会多扩1M的空间。需要注意的是字符串最大长度为512M。")]),t._v(" "),a("h2",{attrs:{id:"_2-散列（hashes）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-散列（hashes）"}},[t._v("#")]),t._v(" 2. 散列（hashes）")]),t._v(" "),a("h2",{attrs:{id:"_3-列表（lists）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-列表（lists）"}},[t._v("#")]),t._v(" 3. 列表（lists）")]),t._v(" "),a("h2",{attrs:{id:"_4-集合（sets）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-集合（sets）"}},[t._v("#")]),t._v(" 4. 集合（sets）")]),t._v(" "),a("h2",{attrs:{id:"_5-有序集合（sorted-sets）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-有序集合（sorted-sets）"}},[t._v("#")]),t._v(" 5. 有序集合（sorted sets）")]),t._v(" "),a("Boxx",{attrs:{type:"tip",content:"本站使用「CC BY 4.0」创作共享协议，转载请在文章明显位置注明作者及出处。"}})],1)}),[],!1,null,null,null);s.default=e.exports}}]);