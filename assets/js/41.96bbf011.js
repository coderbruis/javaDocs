(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{435:function(n,s,t){"use strict";t.r(s);var a=t(2),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"_1-概览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-概览"}},[n._v("#")]),n._v(" 1. 概览")]),n._v(" "),t("p",[n._v("在Netty中，ChannelPipeline和ChannelHandler类似于Servlet和Filter过滤器，这类拦截器实际上是责任链模式的一种变形，这么设计是为了方便事件的拦截和用户业务逻辑的定制。")]),n._v(" "),t("p",[n._v("Servlet和Filter是JAVAEE中的基础组件，初学JAVAEE的小伙伴再熟悉不过了，它能够拦截到HTTP请求以及响应，并读出请求和响应的数据用作业务逻辑的处理，通过这种方式Servlet和Filter可以对Web应用程序进行预处理和后置处理。")]),n._v(" "),t("p",[n._v("Netty的Channel过滤器实现原理与ServletFilter机制一致，它将Channel的数据管道抽象为ChannelPipeline, 消息在ChannelPipeline中流动和传递。ChannelPipeline 持有I/O事件拦截器ChannelHandler的链表，由ChanneIHandler对I/O事件进行拦截和处理，可以方便地通过新增和删除ChannelHandler来实现不同的业务逻辑定制，不需要对已有的ChannelHandler进行修改，能够实现对修改封闭和对扩展的支持。总的而言，在Netty中，pipeline相当于Netty的大动脉，负责Netty的读写事件的传播。")]),n._v(" "),t("h2",{attrs:{id:"_2-channelpipeline原理分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-channelpipeline原理分析"}},[n._v("#")]),n._v(" 2. ChannelPipeline原理分析")]),n._v(" "),t("p",[n._v("ChannelPipeline是ChannelHandler的容器，它负责ChannelHandler的管理和事件拦截。下面用一张图来展示在Netty中，一个“消息”被ChannelPipeline拦截，然后被ChannelHandler处理的过程，流程如下：")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline01",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline01.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline01.png",alt:"ChannelPipeline01"}})])]),n._v(" "),t("ol",[t("li",[n._v("底层的SocketChannel read(方法读取ByteBuf， 触发ChannelRead 事件，由I/O线程NioEventLoop 调用ChannelPipeline 的fireChannelRead(Object msg)方法， 将消息\n(ByteBuf)传输到ChannelPipeline中")]),n._v(" "),t("li",[n._v("消息依次被HeadHandler、ChannelHandler1、 ChannelHander2.....TailHandler 拦截和处理，在这个过程中，任何ChannelHandler都可以中断当前的流程，结束消息的传递")]),n._v(" "),t("li",[n._v("调用ChannelHandlerContext的write方法发送消息，消息从TailHandler开始，途经ChannelHanderN.....ChannelHandlerl. HeadHandler, 最终被添加到消息发送缓冲区中等待刷新和发送，在此过程中也可以中断消息的传递，例如当编码失败时，就需要中断流程，构造异常的Future返回")])]),n._v(" "),t("p",[n._v("Netty中的事件分为inbound事件和outbound事件.inbound事件通常由1/O线程触发,例如TCP链路建立事件、链路关闭事件、读事件、异常通知事件等，它对应上图的左半部分。")]),n._v(" "),t("p",[n._v("触发inbound事件的方法如下：")]),n._v(" "),t("ol",[t("li",[n._v("ChannelHandlerContext#fireChannelRegistered(): Channel 注册事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireChannelActive(): TCP链路建立成功, Channel激活事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireChannelRead(Object): 读事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireChannelReadComplete(): 读操作完成通知事件;")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireExceptionCaught(Throwable): 异常通知事件;")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireUserEventTriggered(Object): 用户自定义事件:")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireChannelWritabilityChanged(): Channel 的可写状态变化通知事件;")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#fireChannellnactive(): TCP连接关闭，链路不可用通知事件。")])]),n._v(" "),t("p",[n._v("Outbound事件通常是由用户主动发起的网络I/O操作，例如用户发起的连接操作、绑定操作、消息发送等操作，它对应上图的右半部分。")]),n._v(" "),t("p",[n._v("触发outbound事件的方法如下：")]),n._v(" "),t("ol",[t("li",[n._v("ChannelHandlerContext#bind( SocketAddress, ChannelPromise):绑定本地地址事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#connect(SocketAddress, SocketAddress, ChannelPromise):连接服务端事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#write(Object, ChannelPromise):发送事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#flushO): 刷新事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#read(): 读事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#disconnect(ChannelPromise): 断开连接事件")]),n._v(" "),t("li",[n._v("ChannelHandlerContext#close(ChannelPromise): 关闭当前Channel事件")])]),n._v(" "),t("h3",{attrs:{id:"_2-1-channelpipeline接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-channelpipeline接口"}},[n._v("#")]),n._v(" 2.1 ChannelPipeline接口")]),n._v(" "),t("p",[n._v("为了接下来能够方便的学习原理以及阅读源码，我们先看下ChannelPipeline的接口的继承关系图：")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline02",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline02.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline02.png",alt:"ChannelPipeline02"}})])]),n._v(" "),t("p",[n._v("可以发现，ChannelPipeline接口还继承了ChannelOutboundInvoker以及ChannelInboundInvoker，这两个invoker接口作为ChannelPipeline接口的增强接口。分别看下ChannelPipeline和ChannelOutboundInvoker、ChannelInboundInvoker这三个接口定义。")]),n._v(" "),t("p",[n._v("对于ChannelPipeline接口，方法分别可以分为以下几组类别方法：")]),n._v(" "),t("p",[n._v("第一组是向ChannelPipeline中添加ChannelHandler，如下图所示：")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline03_01",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_01.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_01.png",alt:"ChannelPipeline03_01"}})])]),n._v(" "),t("blockquote",[t("p",[n._v("这里需要提前知道的是，ChannelPipeline维护这一组双向链表的数据结构。")])]),n._v(" "),t("p",[n._v("addFirst是向ChannelPipeline双向链表头补添加节点，addLast是向ChannelPipeline双向链表尾部添加节点，addBefore是向ChannelPipeline双向链表中指定的ChannelHandler之前添加一个新的节点，addAfter是向ChannelPipeline双向链表中指定的ChannelHandler之后添加一个节点。")]),n._v(" "),t("p",[n._v("第二组是向ChannelPipeline中移除ChannelHandler")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline03_02",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_02.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_02.png",alt:"ChannelPipeline03_02"}})])]),n._v(" "),t("p",[n._v("第三组是向获取ChannelHandlerContext对象")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline03_03",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_03.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_03.png",alt:"ChannelPipeline03_03"}})])]),n._v(" "),t("p",[n._v("第四组是ChannelInboundInvoker接口增强而来的方法\n"),t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline03_04",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_04.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_04.png",alt:"ChannelPipeline03_04"}})])]),n._v(" "),t("p",[n._v("第五组是ChannelOutboundInvoker接口增强而来的方法\n"),t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline03_05",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_05.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline03_05.png",alt:"ChannelPipeline03_05"}})])]),n._v(" "),t("p",[n._v("在Netty中，ChannelPipeline是一个双向链表的数据结构，那么链表节点是什么呢？答案就是ChannelHandlerContext对象。")]),n._v(" "),t("p",[n._v("在Netty中，ChannelHandlerContext对象就是存在ChannelPipeline双向链表中的节点元素，在ChannelPipeline中，Netty会为其初始化Head头结点和Tail尾结点，在ChannelPipeline实现类：DefaultChannelPipeline中可以看到定义：")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" head"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("p",[n._v("DefaultChannelPipeline构造方法中，对head和tail进行了初始化")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("DefaultChannelPipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Channel")]),n._v(" channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 给channel赋值channel对象")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("channel "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ObjectUtil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("checkNotNull")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"channel"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        succeededFuture "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SucceededChannelFuture")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        voidPromise "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("VoidChannelPromise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("channel"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 节点对象是AbstractChannelHandlerContext对象，是用于进行业务处理")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// HeadContext和TailContext就是用户可以模仿实现的ChannelHandler实现类")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// channelPipeline双向连表的头节点")]),n._v("\n        tail "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("TailContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// channelPipeline双向连表的尾结点")]),n._v("\n        head "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HeadContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// channelPipeline: head -> tail")]),n._v("\n        head"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" head"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br")])]),t("p",[n._v("当Netty初始化完DefaultChannelPipeline对象之后，ChannelPipeline中就已经存在了head和tail两个节点了，自然Netty会通过前面介绍的addXxx方法来添加，下面看下ChannelPipeline的addXxx方法源代码：")]),n._v(" "),t("p",[n._v("DefaultChannelPipeline.java")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPipeline")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPipeline")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutorGroup")]),n._v(" group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("synchronized")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("checkMultiplicity")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n             * 生成一个新的ChannelHandlerContext对象，这里返回的是DefaultChannelHandlerContext对象\n             */")]),n._v("\n            newCtx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("filterName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n             * 向pipeline链表中添加一个新的节点\n             */")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// If the registered is false it means that the channel was not registered on an eventLoop yet.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// In this case we add the context to the pipeline and add a task that will call")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// ChannelHandler.handlerAdded(...) once the channel is registered.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!")]),n._v("registered"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("setAddPending")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 触发handlerAdded方法，并开始传播handlerAdded事件，此处最终会调用ChannelInitializer#handlerAdded方法，并最终调用到initChannel方法。")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("callHandlerCallbackLater")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n             * 从NioEventLoopGroup中获取到NioEventLoop对象\n             */")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" executor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!")]),n._v("executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("inEventLoop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("callHandlerAddedInEventLoop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 调用HandlerAdded方法")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("callHandlerAdded0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 向尾结点添加一个节点，并移动指针位置")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("prev "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" newCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutorGroup")]),n._v(" group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("DefaultChannelHandlerContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("childExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("group"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br")])]),t("p",[n._v("那么，对于拥有双向链表结构的ChannelPipeline来说，是如何让事件在链表结构中进行转移执行的？")]),n._v(" "),t("p",[n._v("就拿fireChannelRead方法来分析：")]),n._v(" "),t("p",[n._v("这里需要提前知道的一点是，AbstractCHannelHandlerContext#fireChannelRead方法会被复写了channelRead方法的ChannelHandler调用。")]),n._v(" "),t("p",[n._v("AbstractCHannelHandlerContext.java")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n         * findContextInbound 返回的-> AbstractChannelHandlerContext对象\n         */")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("findContextInbound")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("MASK_CHANNEL_READ"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 查找下一个Inbound节点\n     * @param mask\n     * @return\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("findContextInbound")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" ctx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" currentExecutor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("do")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            ctx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("while")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("skipContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" currentExecutor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" MASK_ONLY_INBOUND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("skipContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" currentExecutor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" onlyMask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// Ensure we correctly handle MASK_EXCEPTION_CAUGHT which is not included in the MASK_EXCEPTION_CAUGHT")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("executionMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("onlyMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("||")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// We can only skip if the EventExecutor is the same as otherwise we need to ensure we offload")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// everything to preserve ordering.")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// See https://github.com/netty/netty/issues/10067")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" currentExecutor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("executionMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br")])]),t("p",[n._v("经过while循环遍历出下一个节点之后，变调用DefaultChannelPipeline#invokeChannelRead方法。")]),n._v(" "),t("p",[n._v("DefaultChannelPipeline")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" m "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("pipeline"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("touch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ObjectUtil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("checkNotNull")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"msg"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" executor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 在Netty线程中，则直接调用")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("inEventLoop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 不在Netty线程中，则另开一个线程来调用ChanelRead方法")]),n._v("\n            executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                    next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("m"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 过滤handler的状态")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("try")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 调用inboundHandler的channelRead方法")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("catch")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeExceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br")])]),t("p",[n._v("就这样，前一个节点的ChannelRead方法执行完，就会遍历出下一个节点的ChannelRead并执行，以此达到了在双向链表中移动节点元素的效果。")]),n._v(" "),t("h3",{attrs:{id:"_2-2-channelpipeline对象是在哪里创建的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-channelpipeline对象是在哪里创建的"}},[n._v("#")]),n._v(" 2.2 ChannelPipeline对象是在哪里创建的")]),n._v(" "),t("p",[n._v("Netty中，ChannelPipeline对象是在Channel被创建的时候生成的，看源码。")]),n._v(" "),t("p",[n._v("AbstractChannel.java")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Channel")]),n._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// channel的标识")]),n._v("\n        id "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// channel的unsafe类")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// NioSocketChannel和NioServerSocketChannel的unsafe对象都一样")]),n._v("\n        unsafe "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newUnsafe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 新建pipeline")]),n._v("\n        pipeline "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newChannelPipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("DefaultChannelPipeline")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newChannelPipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 随后调用DefaultChannelPipeline对象构造方法，在构造方法中生成TailContext和HeadContext，并维护好他们的链表关系")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("DefaultChannelPipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br")])]),t("h2",{attrs:{id:"_3-channelhandler原理分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-channelhandler原理分析"}},[n._v("#")]),n._v(" 3. ChannelHandler原理分析")]),n._v(" "),t("p",[n._v("ChannelPipeline是通过ChannelHandler接口来实现事件的拦截和处理，一般ChannelHandler只需要继承ChannelHandlerAdapter，然后覆盖自己关心的方法即可。")]),n._v(" "),t("p",[n._v("对于ChannelHandler接口，先看下其接口实现图：")]),n._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"netty_pipeline01",href:"https://coderbruis.github.io/javaDocs/img/netty/source/netty_pipeline01.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/netty_pipeline01.png",alt:"netty_pipeline01"}})])]),n._v(" "),t("p",[n._v("可以看到ChannelHandler接口的子类实现图中，有两个重要的子接口：ChannelInboundHandler、ChannelOutboundHandlerAdapter，这两个子接口扩展了ChannelHandler的功能，分别对应着ChannelPipeline章节中介绍的inbound和outbound事件功能。先看看ChannelHandler接口定义了哪些方法。")]),n._v(" "),t("h3",{attrs:{id:"_3-1-channelhandler接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-channelhandler接口"}},[n._v("#")]),n._v(" 3.1 ChannelHandler接口")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("interface")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 添加ChannelHandler的回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handlerAdded")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 移除ChannelHandler的回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handlerRemoved")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * \n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Deprecated")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("exceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Inherited")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Documented")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Target")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ElementType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("TYPE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Retention")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("RetentionPolicy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("RUNTIME"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@interface")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Sharable")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// no value")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br")])]),t("p",[n._v("ChannelHandler是作为业务处理器保存在ChannelPipeline中的，它的其他功能都是在子类实现或者是子接口继承的，下面看下：\nChannelHandlerAdapter")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("abstract")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerAdapter")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("implements")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 判断当前这个ChannelHandler是否有@Shareble修饰，有的话该ChannelHandler就可以在不同的ChannelPipeline之间共享\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isSharable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v('/**\n         * Cache the result of {@link Sharable} annotation detection to workaround a condition. We use a\n         * {@link ThreadLocal} and {@link WeakHashMap} to eliminate the volatile write/reads. Using different\n         * {@link WeakHashMap} instances per {@link Thread} is good enough for us and the number of\n         * {@link Thread}s are quite limited anyway.\n         *\n         * See <a href="https://github.com/netty/netty/issues/2289">#2289</a>.\n         */')]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" clazz "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("getClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" cache "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("InternalThreadLocalMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handlerSharableCache")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Boolean")]),n._v(" sharable "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("clazz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("sharable "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            sharable "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" clazz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isAnnotationPresent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Sharable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("put")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("clazz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" sharable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" sharable"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Skip")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Deprecated")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("exceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireExceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br")])]),t("p",[n._v("可以看到，ChannelHandlerAdapter作为抽象类只实现了顶级接口ChannelHandler的两个方法：isShareble和exceptionCaught，这里是Netty的风格之一，就是定义完顶级接口后，分别有公共抽象子类、子接口来对功能进行增强。那么对于ChannelHandler的功能增强，则由：ChannelOutboundHandler、ChannelInboundHandler来进行的增强。")]),n._v(" "),t("h3",{attrs:{id:"_3-2-channeloutboundhandler、channelinboundhandler接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-channeloutboundhandler、channelinboundhandler接口"}},[n._v("#")]),n._v(" 3.2 ChannelOutboundHandler、ChannelInboundHandler接口")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("interface")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 通道注册完成的回调方法，方法中多以fireChannelRegistered方法为主，作用是往pipeline中传播channelRegistered事件\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 通道解除注册的回调方法\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelUnregistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 通道触发\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * The {@link Channel} of the {@link ChannelHandlerContext} was registered is now inactive and reached its\n     * end of lifetime.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelInactive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 通道读取到消息\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Invoked when the last message read by the current read operation has been consumed by\n     * {@link #channelRead(ChannelHandlerContext, Object)}.  If {@link ChannelOption#AUTO_READ} is off, no further\n     * attempt to read an inbound data from the current {@link Channel} will be made until\n     * {@link ChannelHandlerContext#read()} is called.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelReadComplete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Gets called if an user event was triggered.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("userEventTriggered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" evt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Gets called once the writable state of a {@link Channel} changed. You can check the state with\n     * {@link Channel#isWritable()}.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelWritabilityChanged")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Gets called if a {@link Throwable} was thrown.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@SuppressWarnings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"deprecation"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("exceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("interface")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelOutboundHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 绑定socket事件回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("bind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SocketAddress")]),n._v(" localAddress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * socket连接回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("connect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SocketAddress")]),n._v(" remoteAddress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SocketAddress")]),n._v(" localAddress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * socket断开连接回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("disconnect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * socket关闭回调\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Called once a deregister operation is made from the current registered {@link EventLoop}.\n     *\n     * @param ctx               the {@link ChannelHandlerContext} for which the close operation is made\n     * @param promise           the {@link ChannelPromise} to notify once the operation completes\n     * @throws Exception        thrown if an error occurs\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("deregister")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Intercepts {@link ChannelHandlerContext#read()}.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * \n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     *\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("flush")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br")])]),t("h3",{attrs:{id:"_3-3-channelinitializer抽象类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-channelinitializer抽象类"}},[n._v("#")]),n._v(" 3.3 ChannelInitializer抽象类")]),n._v(" "),t("p",[n._v("在来看看ChannelInitializer这个抽象类，定义了什么功能。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Sharable")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("abstract")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInitializer")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("C")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundHandlerAdapter")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("InternalLogger")]),n._v(" logger "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("InternalLoggerFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("getInstance")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInitializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// initMap用于保存在不同pipeline之间共享的ChannelHandler对象，减少开销")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Set")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" initMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Collections")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newSetFromMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ConcurrentHashMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 初始化channel的抽象方法，具体由子类提供实现逻辑\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("abstract")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("C")]),n._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@SuppressWarnings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"unchecked"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 通道注册完成后，对通道进行初始化")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 将通道注册完这个事件往pipeline里传播")]),n._v("\n            ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("pipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// We are done with init the Channel, removing all the state for the Channel now.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("removeState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("        \n            ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * Handle the {@link Throwable} by logging and closing the {@link Channel}. Sub-classes may override this.\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("exceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isWarnEnabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            logger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("warn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"Failed to initialize a channel. Closing: "')]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("+")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("close")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * {@inheritDoc} If override this method ensure you call super!\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handlerAdded")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// This should always be true with our current DefaultChannelPipeline implementation.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// The good thing about calling initChannel(...) in handlerAdded(...) is that there will be no ordering")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// surprises if a ChannelInitializer will add another ChannelInitializer. This is as all handlers")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// will be added in the expected order.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// We are done with init the Channel, removing the initializer now.")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("removeState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handlerRemoved")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        initMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@SuppressWarnings")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"unchecked"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("throws")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Exception")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("initMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// Guard against re-entrance.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("try")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 调用抽象方法initChannel(channel)")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("C")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("catch")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// Explicitly call exceptionCaught(...) as we removed the handler before calling initChannel(...).")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// We do so to prevent multiple calls to initChannel(...).")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("exceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("finally")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPipeline")]),n._v(" pipeline "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("pipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("pipeline"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("context")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                    pipeline"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 将Channelhandler从initMap中移除")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("removeState")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// The removal may happen in an async fashion if the EventExecutor we use does something funky.")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isRemoved")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            initMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// The context is not removed yet which is most likely the case because a custom EventExecutor is used.")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// Let's schedule it on the EventExecutor to give it some more time to be completed in case it is offloaded.")]),n._v("\n            ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                    initMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("remove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br"),t("span",{staticClass:"line-number"},[n._v("66")]),t("br"),t("span",{staticClass:"line-number"},[n._v("67")]),t("br"),t("span",{staticClass:"line-number"},[n._v("68")]),t("br"),t("span",{staticClass:"line-number"},[n._v("69")]),t("br"),t("span",{staticClass:"line-number"},[n._v("70")]),t("br"),t("span",{staticClass:"line-number"},[n._v("71")]),t("br"),t("span",{staticClass:"line-number"},[n._v("72")]),t("br"),t("span",{staticClass:"line-number"},[n._v("73")]),t("br"),t("span",{staticClass:"line-number"},[n._v("74")]),t("br"),t("span",{staticClass:"line-number"},[n._v("75")]),t("br"),t("span",{staticClass:"line-number"},[n._v("76")]),t("br"),t("span",{staticClass:"line-number"},[n._v("77")]),t("br"),t("span",{staticClass:"line-number"},[n._v("78")]),t("br"),t("span",{staticClass:"line-number"},[n._v("79")]),t("br"),t("span",{staticClass:"line-number"},[n._v("80")]),t("br"),t("span",{staticClass:"line-number"},[n._v("81")]),t("br"),t("span",{staticClass:"line-number"},[n._v("82")]),t("br"),t("span",{staticClass:"line-number"},[n._v("83")]),t("br"),t("span",{staticClass:"line-number"},[n._v("84")]),t("br"),t("span",{staticClass:"line-number"},[n._v("85")]),t("br"),t("span",{staticClass:"line-number"},[n._v("86")]),t("br"),t("span",{staticClass:"line-number"},[n._v("87")]),t("br"),t("span",{staticClass:"line-number"},[n._v("88")]),t("br"),t("span",{staticClass:"line-number"},[n._v("89")]),t("br"),t("span",{staticClass:"line-number"},[n._v("90")]),t("br"),t("span",{staticClass:"line-number"},[n._v("91")]),t("br"),t("span",{staticClass:"line-number"},[n._v("92")]),t("br"),t("span",{staticClass:"line-number"},[n._v("93")]),t("br"),t("span",{staticClass:"line-number"},[n._v("94")]),t("br"),t("span",{staticClass:"line-number"},[n._v("95")]),t("br"),t("span",{staticClass:"line-number"},[n._v("96")]),t("br"),t("span",{staticClass:"line-number"},[n._v("97")]),t("br"),t("span",{staticClass:"line-number"},[n._v("98")]),t("br"),t("span",{staticClass:"line-number"},[n._v("99")]),t("br"),t("span",{staticClass:"line-number"},[n._v("100")]),t("br")])]),t("p",[n._v("对于ChannelInboundHandlerAdapter这个抽象类来说，已经实现了ChannelInboundHandler这个接口的所有方法了，而ChannelOutboundHandlerAdapter抽象类同样已经实现了ChannelOutboundHandler接口的所有方法，因此继承了ChannelInitializer的实现类，只需要实现initChannel(Channel ch)方法即可。")]),n._v(" "),t("p",[n._v("下面看一个ChannelInitializer的例子")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HttpHelloWorldServerInitializer")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInitializer")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SocketChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SslContext")]),n._v(" sslCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HttpHelloWorldServerInitializer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SslContext")]),n._v(" sslCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("sslCtx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" sslCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("initChannel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("SocketChannel")]),n._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPipeline")]),n._v(" p "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("pipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("sslCtx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("sslCtx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HttpServerCodec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HttpServerExpectContinueHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("addLast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("HttpHelloWorldServerHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br")])]),t("p",[n._v("由上面的例子知道，对于initChannel(Channel ch)方法而言，主要是用于往pipeline中添加ChannelHandler的。")]),n._v(" "),t("h2",{attrs:{id:"_4-channelhandlercontext源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-channelhandlercontext源码分析"}},[n._v("#")]),n._v(" 4. ChannelHandlerContext源码分析")]),n._v(" "),t("p",[n._v("ChannelHandlerContext接口定义")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("interface")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("extends")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AttributeMap")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundInvoker")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelOutboundInvoker")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 获得一个channel对象\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Channel")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 获取一个EventExecutor对象，这里实际获得的是NioEventLoop\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 获取ChannelHandler的名称\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("String")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 绑定在ChannelHandlerContext上的ChannelHandler\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandler")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("isRemoved")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelUnregistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelInactive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireExceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" cause"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireUserEventTriggered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" evt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelReadComplete")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelWritabilityChanged")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("flush")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 获取pipeline\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPipeline")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("pipeline")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * 获取一个内存分配器\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ByteBufAllocator")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("alloc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * @deprecated Use {@link Channel#attr(AttributeKey)}\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Deprecated")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Attribute")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("attr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AttributeKey")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n     * @deprecated Use {@link Channel#hasAttr(AttributeKey)}\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Deprecated")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("hasAttr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AttributeKey")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br"),t("span",{staticClass:"line-number"},[n._v("66")]),t("br"),t("span",{staticClass:"line-number"},[n._v("67")]),t("br"),t("span",{staticClass:"line-number"},[n._v("68")]),t("br"),t("span",{staticClass:"line-number"},[n._v("69")]),t("br"),t("span",{staticClass:"line-number"},[n._v("70")]),t("br"),t("span",{staticClass:"line-number"},[n._v("71")]),t("br"),t("span",{staticClass:"line-number"},[n._v("72")]),t("br"),t("span",{staticClass:"line-number"},[n._v("73")]),t("br"),t("span",{staticClass:"line-number"},[n._v("74")]),t("br"),t("span",{staticClass:"line-number"},[n._v("75")]),t("br"),t("span",{staticClass:"line-number"},[n._v("76")]),t("br"),t("span",{staticClass:"line-number"},[n._v("77")]),t("br"),t("span",{staticClass:"line-number"},[n._v("78")]),t("br"),t("span",{staticClass:"line-number"},[n._v("79")]),t("br"),t("span",{staticClass:"line-number"},[n._v("80")]),t("br"),t("span",{staticClass:"line-number"},[n._v("81")]),t("br")])]),t("p",[n._v("可以看到ChannelHandlerContext分别继承了ChannelInboundInvoker和ChannelOutboundInvoker接口，在分析Channelpipeline章节时，介绍过其二者定义的功能，ChannelInboundInvoker多以fireXxxx方法构成，代表的是触发的Xxx事件的传播，例如：")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelRegistered")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("findContextInbound")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("MASK_CHANNEL_REGISTERED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("fireChannelRegistered方法就是触发了ChannelRegistered事件能够在ChannelPipeline中进行传播。")]),n._v(" "),t("p",[n._v("而ChannelOutboundInvoker多以socket的绑定、连接、读和写为住，常见的方法由write、flush以及writeAndFlush。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelFuture")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("writeAndFlush")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Object")]),n._v(" msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelPromise")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("msg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[n._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("按照Netty架构的习惯，在给定一个接口之后，一般都会有对应的公共抽象类来定义公共的方法，并将需要定制的方法定义为抽象方法供不同的子类实现，照着这个思路可以找到AbstractChannelHandlerContext这个抽象类。")]),n._v(" "),t("h3",{attrs:{id:"_4-1-abstractchannelhandlercontext源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-abstractchannelhandlercontext源码分析"}},[n._v("#")]),n._v(" 4.1 AbstractChannelHandlerContext源码分析")]),n._v(" "),t("blockquote",[t("p",[n._v("成员变量定义")])]),n._v(" "),t("p",[n._v("在分析AbstractChannelHandlerContext源码之前，我们先看下它的成员变量定义，入下图所示，定义了两个volatile对象：")]),n._v(" "),t("ol",[t("li",[n._v("volatile AbstractChannelHandlerContext next")]),n._v(" "),t("li",[n._v("volatile AbstractChannelHandlerContext prev")])]),n._v(" "),t("p",[n._v("这两个AbstractChannelHandlerContext对象作为指针实现了ChannelPipeline作为双向链表的数据结构。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AtomicIntegerFieldUpdater")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")])]),n._v(" HANDLER_STATE_UPDATER "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AtomicIntegerFieldUpdater")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("newUpdater")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"handlerState"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br")])]),t("blockquote",[t("p",[n._v("关于XxxFieldUpdater类，可以阅读：https://my.oschina.net/u/4072299/blog/3115164")])]),n._v(" "),t("p",[n._v("接着是AbstractChannelHandlerContext的状态：")]),n._v(" "),t("ul",[t("li",[n._v("private static final int ADD_PENDING = 1")]),n._v(" "),t("li",[n._v("private static final int ADD_COMPLETE = 2")]),n._v(" "),t("li",[n._v("private static final int REMOVE_COMPLETE = 3")])]),n._v(" "),t("p",[n._v("ADD_PENDING表示正在调用handlerAdded，ADD_COMPLETE表示已经调用完成了handlerAdded，而REMOVE_COMPLETE表示已经调用完handlerRemoved方法。")]),n._v(" "),t("p",[n._v("而ChannelHandlerContext中还会存有ChannelPipeline。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("DefaultChannelPipeline")]),n._v(" pipeline\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("还有一个handlerState变量，用于定义当前ChannelHandler对象的状态，初始为INIT状态，表示handlerAdded和handlerRemove都还未调用过。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("volatile")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" handlerState "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" INIT\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[t("a",{attrs:{"data-fancybox":"",title:"ChannelPipeline-abstractChannelHandlerContext01",href:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline-abstractChannelHandlerContext01.png"}},[t("img",{attrs:{src:"https://coderbruis.github.io/javaDocs/img/netty/source/ChannelPipeline-abstractChannelHandlerContext01.png",alt:"ChannelPipeline-abstractChannelHandlerContext01"}})])]),n._v(" "),t("p",[n._v("对于ChannelPipeline中的ChannelHandler是如何被调用以及如何移动双向链表中的对象的，实现原理就在这几个方法之间：")]),n._v(" "),t("p",[n._v("AbstractChannelHandlerContext.java")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n     * 触发ChannelActive事件\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("        \n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("findContextInbound")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("MASK_CHANNEL_ACTIVE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("final")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 获取NioEventLoop线程")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" executor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 如果获取到的NioEventLoop线程是当前的线程")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("inEventLoop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 另开一个线程去执行")]),n._v("\n            executor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                    next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("    \n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 检查ChannelHandler的状态")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("try")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("catch")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Throwable")]),n._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("invokeExceptionCaught")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("else")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 遍历下一个节点，重新调用下一个节点")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/*\n     * 找到inbound节点\n     */")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("findContextInbound")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" ctx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 拿到当前的NioEventLoop线程")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" currentExecutor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("do")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 获取ChannelPipeline中的next节点")]),n._v("\n            ctx "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("while")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("skipContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" currentExecutor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" MASK_ONLY_INBOUND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("// 判断是否跳过此节点")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("static")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("skipContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("AbstractChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("EventExecutor")]),n._v(" currentExecutor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("int")]),n._v(" onlyMask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("executionMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("onlyMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("||")]),n._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("executor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" currentExecutor "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("executionMask "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&")]),n._v(" mask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v("==")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[n._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br")])]),t("p",[n._v("当调用来到")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelInboundHandler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("handler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("p",[n._v("会触发下一个Handler的channelActive，此处就拿Tail节点的channelActive来分析。")]),n._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[n._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Override")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("void")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("channelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("ChannelHandlerContext")]),n._v(" ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("fireChannelActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[n._v("readIfIsAutoRead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("p",[n._v("可以看到，调用又来到了ChannelHandlerContext#fireChannelActive，这样又要进行节点的遍历，就这样把事件传播了下去。")]),n._v(" "),t("p",[n._v("由于篇幅原因，剩余ChannelPipeline的分析放在下一篇进行。")]),n._v(" "),t("Boxx",{attrs:{type:"tip",content:"本站使用「CC BY 4.0」创作共享协议，转载请在文章明显位置注明作者及出处。"}})],1)}),[],!1,null,null,null);s.default=e.exports}}]);