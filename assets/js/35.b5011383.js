(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{429:function(l,e,t){"use strict";t.r(e);var _=t(2),s=Object(_.a)({},(function(){var l=this,e=l.$createElement,t=l._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1-单线程、多线程"}},[l._v("1. 单线程、多线程")])]),t("li",[t("a",{attrs:{href:"#_2-多路复用"}},[l._v("2. 多路复用")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1-linux-select-源码简单分析"}},[l._v("2.1 linux select 源码简单分析")])]),t("li",[t("a",{attrs:{href:"#_2-2-select方法的缺点"}},[l._v("2.2 select方法的缺点")])]),t("li",[t("a",{attrs:{href:"#_2-3-linux-poll-函数"}},[l._v("2.3 linux poll 函数")])]),t("li",[t("a",{attrs:{href:"#_2-4-linux-epoll-函数"}},[l._v("2.4 linux epoll 函数")])]),t("li",[t("a",{attrs:{href:"#_2-5-一句话概括select和epoll"}},[l._v("2.5 一句话概括select和epoll")])])])])])]),t("p"),l._v(" "),t("h2",{attrs:{id:"_1-单线程、多线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-单线程、多线程"}},[l._v("#")]),l._v(" 1. 单线程、多线程")]),l._v(" "),t("ol",[t("li",[l._v("多线程 => 上下文切换")]),l._v(" "),t("li",[l._v("单线程 => 单线程不会存在上下文切换")])]),l._v(" "),t("h2",{attrs:{id:"_2-多路复用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-多路复用"}},[l._v("#")]),l._v(" 2. 多路复用")]),l._v(" "),t("p",[l._v("比如一台服务器，已经在处理A请求，此时又进来了一个B请求，那么B请求会被丢失吗？答案是在处理IO，也就是去迎接B请求时，会有DMA去处理这个B请求，所以不会丢失。")]),l._v(" "),t("p",[l._v("在linux系统中一切都是文件，每个网络连接在linux中都是以文件描述符的形式存在，即：FD。")]),l._v(" "),t("p",[l._v("例如在服务器中有5个请求，A、B、C、D、E，那么我们写一个函数去处理这些请求：")]),l._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[l._v("// 去轮询io，这就是select的核心思想\nwhile (1) {\n    // fdxs即 [A,B,C,D,E]\n    for (fdx ind fdxs) {\n        if (fdx 是否有数据 ) {\n            读fdx; 处理；\n        }\n    }\n}\n")])]),l._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[l._v("1")]),t("br"),t("span",{staticClass:"line-number"},[l._v("2")]),t("br"),t("span",{staticClass:"line-number"},[l._v("3")]),t("br"),t("span",{staticClass:"line-number"},[l._v("4")]),t("br"),t("span",{staticClass:"line-number"},[l._v("5")]),t("br"),t("span",{staticClass:"line-number"},[l._v("6")]),t("br"),t("span",{staticClass:"line-number"},[l._v("7")]),t("br"),t("span",{staticClass:"line-number"},[l._v("8")]),t("br"),t("span",{staticClass:"line-number"},[l._v("9")]),t("br")])]),t("p",[l._v("这个就是通过单线程去判断FD是否有数据，然后去处理。")]),l._v(" "),t("h3",{attrs:{id:"_2-1-linux-select-源码简单分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-linux-select-源码简单分析"}},[l._v("#")]),l._v(" 2.1 linux select 源码简单分析")]),l._v(" "),t("ol",[t("li",[t("p",[l._v("程序准备阶段：（准备fd_set数组）")]),l._v(" "),t("p",[l._v("首先创建fds，创建文件描述符。fd使用数组来实现。\nfd_size 是有限制的，即1024个bitmap(1024位)。 00110101010 0101010 ...")])]),l._v(" "),t("li",[t("p",[l._v("程序运行阶段")]),l._v(" "),t("p",[l._v("在select源码中，select方法传入了这个bitmap数组。")]),l._v(" "),t("p",[l._v("select程序运行时，会将用户态中的bitmap数组拷贝到内核态中，然后内核来判断bitmap中哪个fd有数据。【内核态比用户态运行效率更高】")]),l._v(" "),t("p",[l._v("如果select程序直接在用户态中对fd进行数据判断，但是用户态的判断最终还是要经过内核态来判断的。所以select方法直接将用户态的。")]),l._v(" "),t("p",[l._v("如果fd一直没有数据，则在内核态中，整个select函数会阻塞住。select是一个阻塞函数。")]),l._v(" "),t("p",[l._v("即如果fd没有数据，select函数就会被阻塞住。")])]),l._v(" "),t("li",[t("p",[l._v("如果有数据来了\n①  如果有数据来了，则会将bitmap中对应的fd进行置位，表示已经有数据了。（可能会置位多个fd）")]),l._v(" "),t("p",[l._v("②  会从阻塞的select函数返回；")]),l._v(" "),t("p",[l._v("③  然后读取有数据的那个fd，然后处理。")])])]),l._v(" "),t("h3",{attrs:{id:"_2-2-select方法的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-select方法的缺点"}},[l._v("#")]),l._v(" 2.2 select方法的缺点")]),l._v(" "),t("ul",[t("li",[l._v("fd数组（fd_set）只有1024bitmap")]),l._v(" "),t("li",[l._v("(fd_set)bitmap不可重用")]),l._v(" "),t("li",[l._v("用户态到内核态有开销")]),l._v(" "),t("li",[l._v("O(n)时间复杂度的轮询")])]),l._v(" "),t("h3",{attrs:{id:"_2-3-linux-poll-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-linux-poll-函数"}},[l._v("#")]),l._v(" 2.3 linux poll 函数")]),l._v(" "),t("ol",[t("li",[t("p",[l._v("程序准备阶段：（准备pollfd结构体）")]),l._v(" "),t("p",[l._v("相比于数组类型的fd_set，poll定义了一个结构体：poll_fd, 其中包含了 fd 和 events、revents。原理和select一样，都是在用户态中，poll函数将poll_fd拷贝到内核态，然后进行相应操作：判断     fd是否有数据，然后处理")])]),l._v(" "),t("li",[t("p",[l._v("程序执行阶段")]),l._v(" "),t("p",[l._v("① 有数据进入的话，会将poll_fd结构中的revents进行置位为1，即pollin的状态，表示有数据进来，即设置为有数据，接着从poll方法返回；")]),l._v(" "),t("p",[l._v("② 然后poll返回后，判断当前poll_fd结构的revents是否为pollin状态，如果是的话就表示有数据进入，则进行”读数据“和处理数据操作。当然此时revents要置位为0。")]),l._v(" "),t("p",[l._v("说明，所以revents置位为0之后，即可继续重用该pollfd结构了。")]),l._v(" "),t("p",[l._v("因而，poll解决了select的缺点1和缺点2。")])])]),l._v(" "),t("p",[l._v("poll还有如下缺点：")]),l._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[l._v("① 用户态到内核态的切换存在开销；\n\n② O(n)时间复杂度的轮询；\n")])])]),t("h3",{attrs:{id:"_2-4-linux-epoll-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-linux-epoll-函数"}},[l._v("#")]),l._v(" 2.4 linux epoll 函数")]),l._v(" "),t("ol",[t("li",[t("p",[l._v("epoll_create 程序准备阶段：（准备epoll_fd) 比喻成一个白板")]),l._v(" "),t("p",[l._v("程序调用epoll_create创建一个eventpoll对象，也就是epoll_fd代表的对象。创建了的eventpoll会存放在fd列表中。")])]),l._v(" "),t("li",[t("p",[l._v("epoll_ctl 用于向内核注册新的描述符或者是改变某个文件描述符的状态。已注册的描述符在内核中会被维护在一棵红黑树上")]),l._v(" "),t("p",[l._v("程序调用epoll_ctl来监听一个socket，也就是注册一个文件描述符fd，而注册了的文件描述符fd会被维护在一棵红黑树上，红黑树的搜索、插入和删除时间复杂度为O(logn)。")])]),l._v(" "),t("li",[t("p",[l._v("epoll_wait 通过回调函数内核会将 I/O 准备好的描述符加入到一个链表中管理，进程调用 epoll_wait() 便可以得到事件完成的描述符")]),l._v(" "),t("p",[l._v("程序调用epoll_wait会监听已注册的文件描述符是否有事件返回，如果有则将有I/O准备好的描述符加入到一个链表中进行管理。")])])]),l._v(" "),t("p",[l._v("不需要轮询，时间复杂度为O(1)\n解决select的1，2，3，4")]),l._v(" "),t("p",[l._v("因为epoll中，epoll_fd是将用户态和内核态都进行了共享的。")]),l._v(" "),t("h3",{attrs:{id:"_2-5-一句话概括select和epoll"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-一句话概括select和epoll"}},[l._v("#")]),l._v(" 2.5 一句话概括select和epoll")]),l._v(" "),t("ul",[t("li",[t("p",[l._v("select")]),l._v(" "),t("p",[l._v("类似于一堂考试，select的方式就是老师挨着询问（轮询）同学考卷是否已经完成。")])]),l._v(" "),t("li",[t("p",[l._v("epoll")]),l._v(" "),t("p",[l._v("类似于一堂考试，epoll的方式就是完成答卷的同学自己举手向老师示意，然后老师上前去收卷子。")])])]),l._v(" "),t("Boxx",{attrs:{type:"tip",content:"本站使用「CC BY 4.0」创作共享协议，转载请在文章明显位置注明作者及出处。"}})],1)}),[],!1,null,null,null);e.default=s.exports}}]);