(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{478:function(t,e,v){"use strict";v.r(e);var _=v(2),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"概览"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),v("ul",[v("li",[t._v("RocketMQ生产者核心参数详解")]),t._v(" "),v("li",[t._v("主从同步机制分析")]),t._v(" "),v("li",[t._v("RocketMQ同步消息发送")]),t._v(" "),v("li",[t._v("RocketMQ异步消息发送")]),t._v(" "),v("li",[t._v("Netty底层通信框架解析")]),t._v(" "),v("li",[t._v("RocketMQ生产者消息返回状态详解")]),t._v(" "),v("li",[t._v("RocketMQ生产者延迟消息")]),t._v(" "),v("li",[t._v("RocketMQ生产者自定义消息发送规则")])]),t._v(" "),v("h2",{attrs:{id:"_1-rocketmq生产者核心参数详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-rocketmq生产者核心参数详解"}},[t._v("#")]),t._v(" 1. RocketMQ生产者核心参数详解")]),t._v(" "),v("blockquote",[v("p",[t._v("producerGroup：生产者组名")])]),t._v(" "),v("p",[t._v("对于生产者来说，group是唯一存在的，如果启动两个相同group的生产者，会报错。")]),t._v(" "),v("blockquote",[v("p",[t._v("createTopicKey")])]),t._v(" "),v("p",[t._v("一般不轻易创建topic（不会给开发者生产topic，需要通过工单创建topic）")]),t._v(" "),v("blockquote",[v("p",[t._v("defaultTopicQueueNums：默认队列个数（四个）")])]),t._v(" "),v("blockquote",[v("p",[t._v("sendMsgTimeout（单位：ms）：消息发送超时时间")])]),t._v(" "),v("blockquote",[v("p",[t._v("compressMsgBodyOverHowmuch (默认压缩字节4096)")])]),t._v(" "),v("blockquote",[v("p",[t._v("retryTimesWhenSendFailed (可配置)：重发配置")])]),t._v(" "),v("blockquote",[v("p",[t._v("retryAnotherBrokerWhenNotStoreOK (默认false)：未存储成功则尝试其他的broker进行消息存储")])]),t._v(" "),v("blockquote",[v("p",[t._v("maxMessageSize (默认128K)：最大消息大小")])]),t._v(" "),v("h2",{attrs:{id:"_2-主从同步机制分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-主从同步机制分析"}},[t._v("#")]),t._v(" 2. 主从同步机制分析")]),t._v(" "),v("blockquote",[v("p",[t._v("Master - Slave主从同步")])]),t._v(" "),v("p",[t._v("RocketMQ中主从同步机制主要同步哪些内容呢？")]),t._v(" "),v("p",[t._v("在RocketMQ中主要同步两种内容：数据内容 + 元数据信息")]),t._v(" "),v("p",[t._v("元数据信息包括：Topic信息、消费端消费进度等")]),t._v(" "),v("p",[t._v("而数据内容包括了CommitLog等内容")]),t._v(" "),v("blockquote",[v("p",[t._v("元数据同步：会对Broker角色进行识别，如果是Slave则启动同步定时任务")])]),t._v(" "),v("blockquote",[v("p",[t._v("数据内容同步：CommitLog数据的同步是实时的（CommitLog是全量的，重要的数据）")])]),t._v(" "),v("blockquote",[v("p",[t._v("消息同步核心类：HAService、HAConnection、WaitNotifyObject")])]),t._v(" "),v("p",[t._v("元数据同步底层使用的Netty实现的，数据内容的同步是使用的原生socket实现的。")]),t._v(" "),v("h3",{attrs:{id:"_3-1-元数据同步流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-元数据同步流程"}},[t._v("#")]),t._v(" 3.1 元数据同步流程")]),t._v(" "),v("ol",[v("li",[t._v("BrokerStartup#main")]),t._v(" "),v("li",[t._v("BrokerStartup#start")]),t._v(" "),v("li",[t._v("handleSlaveSynchronize")]),t._v(" "),v("li",[t._v("启动定时任务，BokerController.this.slaveSynchronize.syncAll")]),t._v(" "),v("li",[t._v("SlaveSynchronize#syncAll()(同步topic配置，同步消费者偏移量，同步延迟偏移量，同步订阅组配置信息)")]),t._v(" "),v("li",[t._v("SlaveSynchronize#syncTopicConfig")]),t._v(" "),v("li",[t._v("BrokerOuterAPI#getAllTopicConfig")]),t._v(" "),v("li",[t._v("NettyRemotingClient#invokeSync")]),t._v(" "),v("li",[t._v("NettyRemotingAbstract#invokeSyncImpl（此时进行Netty的channel#writeAndFlush调用）")])]),t._v(" "),v("h3",{attrs:{id:"_3-2-消息内容同步"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-消息内容同步"}},[t._v("#")]),t._v(" 3.2 消息内容同步")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Master节点")]),t._v(" "),v("ul",[v("li",[t._v("AcceptSocketService：接受slave节点连接")]),t._v(" "),v("li",[t._v("HAConnection\n"),v("ul",[v("li",[t._v("ReadSocketService：读来自slave节点的数据")]),t._v(" "),v("li",[t._v("WriteSocketSErvice：写到slave节点的数据")])])])])]),t._v(" "),v("li",[v("p",[t._v("Slave节点")]),t._v(" "),v("ul",[v("li",[t._v("HAService\n"),v("ul",[v("li",[t._v("HAClient：对Master节点连接、读写数据")])])])])])]),t._v(" "),v("p",[t._v("通信协议：Master节点与Slave几点通信协议很简单，只有两条：")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("对象")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("用途")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("第几位")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("字段")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("数据类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("节点")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("Slave => Master")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("上报CommitLog已经同步到的物理位置")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("maxPhyOffset")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Long")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("CommitLog最大物理位置")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("Master => Slave")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("传输新的CommitLog数据")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("fromPhyOffset")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Long")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("CommitLog开始物理位置")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("size")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Int")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("传输CommitLog数据长度")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}}),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("body")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Bytes")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("size")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("传输CommitLog数据")])])])]),t._v(" "),v("p",[t._v("数据消息同步流程")]),t._v(" "),v("ol",[v("li",[t._v("BrokerStartup#main")]),t._v(" "),v("li",[t._v("BrokerStartup#start")]),t._v(" "),v("li",[t._v("DefaultMessageStore#start")]),t._v(" "),v("li",[t._v("HAService#start")]),t._v(" "),v("li",[t._v("HAClient#start")]),t._v(" "),v("li",[t._v("调用HAClient#run方法")]),t._v(" "),v("li",[t._v("HAService#connectMaster")]),t._v(" "),v("li",[t._v("RemotingUtil#connect （进行NIO底层调用）")]),t._v(" "),v("li",[t._v("this.selector.select(1000)监听读写事件")]),t._v(" "),v("li",[t._v("HAService#processReadEvent")]),t._v(" "),v("li",[t._v("HAService#dispatchReadRequest")])]),t._v(" "),v("p",[t._v("数据消息同步核心逻辑是判断Master的CommitLog和Slave的CommitLog偏移量offset长度是否一致，")]),t._v(" "),v("h2",{attrs:{id:"_3-rocketmq同步消息发送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-rocketmq同步消息发送"}},[t._v("#")]),t._v(" 3. RocketMQ同步消息发送")]),t._v(" "),v("p",[t._v("消息的同步发送: producer.send(msg)")]),t._v(" "),v("p",[t._v("同步发送消息核心实现: DefaultMQProducerlmpl")]),t._v(" "),v("h2",{attrs:{id:"_4-rocketmq异步消息发送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-rocketmq异步消息发送"}},[t._v("#")]),t._v(" 4. RocketMQ异步消息发送")]),t._v(" "),v("p",[t._v("producer .send(Message msg, SendCallback sendCallback)")]),t._v(" "),v("p",[t._v("异步发送消息核心实现: DefaultMQProducerlmpl")]),t._v(" "),v("h2",{attrs:{id:"_5-netty底层通信框架解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-netty底层通信框架解析"}},[t._v("#")]),t._v(" 5. Netty底层通信框架解析")]),t._v(" "),v("h2",{attrs:{id:"_6-rocketmq生产者消息返回状态详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-rocketmq生产者消息返回状态详解"}},[t._v("#")]),t._v(" 6. RocketMQ生产者消息返回状态详解")]),t._v(" "),v("h2",{attrs:{id:"_7-rocketmq生产者延迟消息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_7-rocketmq生产者延迟消息"}},[t._v("#")]),t._v(" 7. RocketMQ生产者延迟消息")]),t._v(" "),v("blockquote",[v("p",[t._v("延迟消息:消息发到Broker后要特定的时间才会被Consumer消费")])]),t._v(" "),v("blockquote",[v("p",[t._v("目前只支持固定精度的定时消息")])]),t._v(" "),v("blockquote",[v("p",[t._v("MessageStoreConfig配置类&ScheduleMessageService任务类")])]),t._v(" "),v("blockquote",[v("p",[t._v("setDelayTimeLevel方法设置")])]),t._v(" "),v("h2",{attrs:{id:"_8-rocketmq生产者自定义消息发送规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_8-rocketmq生产者自定义消息发送规则"}},[t._v("#")]),t._v(" 8. RocketMQ生产者自定义消息发送规则")]),t._v(" "),v("blockquote",[v("p",[t._v("如何把消息发送到指定的队列(Message Queue) ?")])]),t._v(" "),v("blockquote",[v("p",[t._v("MessaqeQueueSelector")])]),t._v(" "),v("blockquote",[v("p",[t._v("producer.send (Msg, selector, Obj)")])])])}),[],!1,null,null,null);e.default=a.exports}}]);